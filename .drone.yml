kind: pipeline
type: docker
name: default

steps:
  - name: Restore cache
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: 'filesystem'
      restore: true
      cache_key: 'volume'
      archive_format: 'gzip'
      mount:
        - 'vendor'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: Build
    image: docker:stable-dind
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    environment:
      DOCKER_USER:
        from_secret: DOCKER_USER
      DOCKER_PASS:
        from_secret: DOCKER_PASS
    commands:
      - docker build -t $DOCKER_USER/typescript-server-boilerplate:$DRONE_BUILD_NUMBER --network=host .
      - docker login -u $DOCKER_USER -p $DOCKER_PASS
      - docker push $DOCKER_USER/typescript-server-boilerplate:$DRONE_BUILD_NUMBER
    when:
      status: [success]

  - name: Update instance
    image: peterabsolon/build-server:v0.1.31
    environment:
      HOSTNAME: '34.107.72.42'
      DRONE_BUILD_NUMBER: $DRONE_BUILD_NUMBER
    commands:
      - ./deploy/update.sh
    when:
      status: [success]

  - name: Rebuild cache
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: 'filesystem'
      rebuild: true
      cache_key: 'volume'
      archive_format: 'gzip'
      mount:
        - 'vendor'
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      status: [success]

services:
  - name: docker
    image: docker:stable-dind
    privileged: true
  - name: database
    image: postgres:13.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ranchitup
      POSTGRES_DB: postgres

volumes:
  - name: cache
    host:
      path: /tmp/cache
  - name: docker_socket
    host:
      path: /var/run/docker.sock
